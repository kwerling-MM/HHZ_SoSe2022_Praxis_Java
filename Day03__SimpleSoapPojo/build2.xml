<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project name="version" basedir="src" default="generate.service">
	
	<property name="dest.dir" value="build" />
	
	<property name="dest.dir.classes" value="${dest.dir}/classes" />


	<property environment="env"/>

	<property name="axis2.home" value="${env.AXIS2_HOME}" />


	<property name="repository.path" value="${axis2.home}/repository/services" />
	
	<path id="build.class.path">
		<fileset dir="${axis2.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="clean">
		<delete dir="${dest.dir}" />
	</target>
	
	<target name="prepare">
		
		<mkdir dir="${dest.dir}" />
		
		<mkdir dir="${dest.dir.classes}" />
		
		<mkdir dir="${dest.dir.classes}/META-INF" />
	
	</target>
	
	<target name="generate.service" depends="clean,prepare">
		
		<copy file="src/com/hhz/META-INF/services.xml" tofile="${dest.dir.classes}/META-INF/services.xml" overwrite="true" />
<!--
		This is a common trap with Web Service Dev:  JAVA EE runs on version 1.8, while the SE JDK already is
		version 18. The class file formats are different as version 18 supports souce code constructs not known
		to Java EE 1.8.  In order to prevent this one must do 2 things:

				-1-  Do not use source code constructs not known to Java EE 1.8.
					 Not such a big deal, as the javac compiler will let one know
					 when the problem arises if #2 is followed.

				-2-  None need to set the source and target parameter for the javac ant task.

		<javac srcdir="src" source="1.7" target="1.7" destdir="${dest.dir.classes}" includes="com/hhz/**">
-->
		<javac srcdir="src" destdir="${dest.dir.classes}" includes="com/hhz/**">
			<classpath refid="build.class.path" />
		</javac>

		<jar basedir="${dest.dir.classes}" destfile="${dest.dir}/hellopojo.aar" />

		<!--
        -->
	</target>
	
</project>
